kind: Deployment
apiVersion: apps/v1
metadata:
  name: pathfinder-db
  labels:
    app.kubernetes.io/name: pathfinder-db
    app.kubernetes.io/version: "10.6"
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: pathfinder-db
    app.kubernetes.io/part-of: tackle
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pathfinder-db
      app.kubernetes.io/version: "10.6"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pathfinder-db
        app.kubernetes.io/version: "10.6"
    spec:
      volumes:
        - name: pathfinder-db-data
          persistentVolumeClaim:
            claimName: pathfinder-db
      containers:
        - name: postgres
          image: postgres:10.6
          ports:
            - containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_USER
              value: pathfinder_username
            - name: POSTGRES_PASSWORD
              value: pathfinder_password
            - name: POSTGRES_DB
              value: pathfinder_db
          resources: {}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - "-c"
                - |
                  psql -U $POSTGRES_USER -d $POSTGRES_DB -c 'SELECT 1'
            initialDelaySeconds: 60
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - "-c"
                - |
                  psql -U $POSTGRES_USER -d $POSTGRES_DB -c 'SELECT 1'
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: pathfinder-db-data
              mountPath: "/var/lib/db"
          securityContext:
            privileged: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
